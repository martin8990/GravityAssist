#include "noiseSimplex.cginc"
struct NoiseData
{
	float amplitude;
	float smoothness;
	float fractals;
	float seed;

};

RWStructuredBuffer<NoiseData> noiseBuffer;
float fractalize(NoiseData H,float2 pos)
{
	float val = 0;
	for(int i = 0; i < H.fractals; i++)
	{
		val += ((snoise((pos.xy + uint2(H.seed,H.seed) ) * pow(2,i)) + 1.0)/2.0)/pow(2,i);
	}
	return val;
}

float getNoise(float2 RawPos)
{
	NoiseData H = noiseBuffer[0];

	
	float2 pos = (RawPos)/(H.smoothness);
	return lerp(-H.amplitude,H.amplitude,fractalize(H,pos));
}

//ss